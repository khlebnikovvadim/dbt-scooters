sources:
  - name: "scooters_raw"
    description: "Raw data provided by scooters service"
    loader: "https://t.me/inzhenerka_dbt_bot"
    tables:
      - name: "trips"
        description: "Scooter trips"
        loaded_at_field: "finished_at"
        freshness:
          warn_after:
            count: 1
            period: "day"
          error_after:
            count: 3650
            period: "day"
        columns:
          - name: "user_id"
            description: "User identifier"
            data_tests:
              - not_null
              - relationships:
                  name: "every_trip_has_user"
                  to: "source('scooters_raw', 'users')"
                  field: "id"

      - name: "users"
        description: "Users of scooter service"
        columns:
          - name: "sex"
            description: "User gender"
            data_tests:
              - accepted_values:
                  values: [ "M", "F" ]
              - not_null:
                  config:
                    severity: "warn"
      - name: "events"
        description: "Instant events of scooter service"

models:
  - name: "users_class_weekly_trips"
    description: "User classification based on trips during the week"
    data_tests:
      - unique_key:
          columns: [ "user_id" ]
    columns:
      - name: "regular"
        description: "Regular user, rides at least 3 days a week"
      - name: "fan"
        description: "Enthusiast, uses the service on average at least 6 days a week"
  - name: "users_class_weekly_destination_trips"
    description: "User classification based on trips during the week considering the destination"
    data_tests:
      - unique_key:
          columns: [ "user_id" ]
    columns:
      - name: "to_work"
        description: "Travels to the same place (to work) in the morning at least three times a week" 
  - name: "users_class_monthly_trips"
    description: "User classification based on the number of trips per month"
    data_tests:
      - unique_key:
          columns: [ "user_id" ]
    columns:
      - name: "rare"
        description: "infrequent/occasional trips, no more than 2 trips per month"   
  - name: "users_class"
    description: >
      Combining all features into a consolidated table.
      Joining with the users table to label each user
    data_tests:
      - unique_key:
          columns: [ "user_id" ]    
  - name: "users_prep"
    description: "Users prepared for analysis without sensitive data"
    config:
      materialized: "view"
  - name: "trips_prep"
    description: "Trips prepared for analysis"
    config:
      materialized: "view"
    data_tests:
      - row_count_equal:
          compare_model: "source('scooters_raw', 'trips')"
  - name: "events_full"
    description: "All events and description"
    config:
      materialized: "view" 
  - name: "events_stream"
    description: "User events prepared for product analysis"
    config:
      materialized: "view"  
  - name: "stream"
    description: "User events prepared for p analysis"
    config:
      materialized: "view"
  - name: "book_scooter_retention"
    description: >
      Retention analysis which tells how many people
      started search for scooter and finally booked it on or after
      1, 7, 14 days (or weeks, months, years), etc
  - name: "trips_stat"
    description: "Overall trips statistics"
  - name: "trips_stat_daily"
    description: "Daily trips aggregation statistics"
  - name: "trips_age_daily"
    description: "Daily trips statistics by user age"
    data_tests:
      - unique:
          column_name: "date::text || age::text"
      - unique_key:
          columns: [ "date", "age" ]    
  - name: "trips_age_daily_stat"
    description: "Aggregation of daily trips statistics by user age"
  - name: "trips_geom"
    description: "Trips prepared for geometry analysis"
    config:
      materialized: "view"
  - name: "parking_start_stat"
    description: "Trip start parking statistics by 500 m hexagons"  
  - name: "parking_finish_stat"
    description: "Trip finish parking statistics by 10 m hexagons" 
  - name: "trips_users"
    description: "Prepared trips enriched with users data"
    config:
      materialized: "incremental"
      post-hook:
        - "analyze dbt.trips_users"
        - sql: "vacuum dbt.trips_users"
          transaction: false
  - name: "events_clean"
    description: "User events without duplicates"
    config:
      materialized: "incremental"
      strategy: "merge"
      unique_key: [ "user_id", "timestamp", "type_id" ]
  - name: "trips_concurrency"
    description: "Number of simultaneous rides in time"
    config:
      materialized: "incremental"
  - name: "companies"
    description: "Scooter satistics by company"
  - name: "companies_trips"
    description: "Trip satistics by company"
    columns:
          - name: "company"
            description: "Company name"
            data_tests:
              - unique
  - name: "events_stat"
    description: "Overall user events statistics"
  - name: "trips_age_group"
    description: "Overall trips statistics by user age group"
  - name: "sex_age_pivot"
    description: "Trips per age grouped by sex"
    data_tests:
      - unique_key:
          columns: [ "age" ]
      - dbt_expectations.expect_table_column_count_to_equal:
          value: 4
    columns:
      - name: "age"
        description: "Numerical age of user"
        data_tests:
          - "dbt_utils.not_constant"
  - name: "metricflow_time_spine"
    description: "Time spine calendar for metricflow"  
   

seeds:
  - name: "scooters"
    description: >
      Scooter models information and park statistics by model.
      Includes information about the manufacturing company.
      Data received from the service team and uploaded by Mark.
      Data is current as of summer 2023.
    config:
      delimiter: ","
  - name: "event_types"
    description: "{{ doc('event_types') }}"
    columns:
      - name: "type_id"
        description: >
          An integer serving as a unique identifier for each event type.
          It is used in user event tables as a foreign key to link events to their descriptions
      - name: "type"
        description: >
          A string describing the event type, enhancing the interpretability of event data
          by providing a human-readable label
    config:
      delimiter: ","
  - name: "age_groups"
    description: "Age groups to split users for analysis"
    columns:
      - name: "group"
        description: "Age group name for report"
        data_tests: [ "unique_not_null" ]
      - name: "age_start"
        description: "Start age of group"
        data_tests: [ "unique_not_null" ]
      - name: "age_end"
        description: "End age of group"
        data_tests: [ "unique_not_null" ]
  - name: "trips_age_sex_daily"
    description: "Daily trips statistics by user age and gender"
    data_tests:
      - unique_key:
          columns: [ "date", "age", "sex" ]

  - name: "trips_age_sex_weekly"
    description: "Weekly trips statistics by user age and gender"
    data_tests:
      - unique_key:
          columns: [ "week", "age", "sex" ]

  - name: "trips_age_sex_monthly"
    description: "Monthly trips statistics by user age and gender"
    data_tests:
      - unique_key:
          columns: [ "month", "age", "sex" ]
  
      
      